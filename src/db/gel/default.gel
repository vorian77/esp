module default {
  scalar type Name extending str;

  type SysError {
    required createdAt: datetime {
      default := datetime_of_transaction();
      readonly := true;
    };
    errCode: str;
    required errFile: str;
    required errFunction: str;
    required errMsgSystem: str;
    required errMsgUser: str;
    errStatus: int16;
    required isClosed: bool {
      default := false
    };
    note: str;
    user: sys_user::SysUser{
      on target delete delete source;
    };
  }

  type SysPerson extending sys_core::ObjRoot {
    addr1: str;
    addr2: str;
    avatar: json;
    birthDate: cal::local_date;
    city: str;
    codeDisabilityStatus: sys_core::SysCode;
    codeEthnicity: sys_core::SysCode;
    codeGender: sys_core::SysCode;
    codePersonLivingArrangements: sys_core::SysCode;
    codeRace: sys_core::SysCode;
    codeState: sys_core::SysCode;
    email: str;
    favFood: str;
    required firstName: default::Name;
    property fullName := .firstName ++ ' ' ++ .lastName;
    genderSelfId: str;
    idMigration: uuid;
    isLegalAgreed: bool;
    required lastName: default::Name;
    middleName: default::Name;
    phoneAlt: str;
    phoneMobile: str;
    ssn: str;
    title: str;
    zip: str;
  }

  scalar type nonNegative extending int64 {
    constraint min_value(0);
  }
}


# with now := cal::to_local_date(datetime_current(), 'UTC'),
#   compare := <cal::local_date>'2024-11-10',
#   elapsed := now - compare
# select duration_get(elapsed, 'day');