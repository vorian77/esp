// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _sys_core from "./sys_core";
import type * as _std from "./std";
import type * as _sys_user from "./sys_user";
import type * as _sys_db from "./sys_db";
import type * as _default from "./default";
export type $SysAnalyticλShape = $.typeutil.flatten<_sys_core.$SysObjλShape & {
  "parms": $.LinkDesc<$SysRepParm, $.Cardinality.Many, {}, false, false,  false, false>;
  "statuses": $.LinkDesc<$SysAnalyticStatus, $.Cardinality.Many, {}, false, false,  false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<analytic[is sys_rep::SysRepUserAnalytic]": $.LinkDesc<$SysRepUserAnalytic, $.Cardinality.Many, {}, false, false,  false, false>;
  "<analytics[is sys_rep::SysRep]": $.LinkDesc<$SysRep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<analytic": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<analytics": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $SysAnalytic = $.ObjectType<"sys_rep::SysAnalytic", $SysAnalyticλShape, null, [
  ..._sys_core.$SysObj['__exclusives__'],
]>;
const $SysAnalytic = $.makeType<$SysAnalytic>(_.spec, "17011630-1880-11ef-af53-f7b94ac2e26f", _.syntax.literal);

const SysAnalytic: $.$expr_PathNode<$.TypeSet<$SysAnalytic, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysAnalytic, $.Cardinality.Many), null);

export type $SysAnalyticStatusλShape = $.typeutil.flatten<_sys_user.$MgmtλShape & {
  "codeStatus": $.LinkDesc<_sys_core.$SysCode, $.Cardinality.One, {}, false, false,  false, false>;
  "comment": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "expr": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<statuses[is sys_rep::SysAnalytic]": $.LinkDesc<$SysAnalytic, $.Cardinality.Many, {}, false, false,  false, false>;
  "<statuses": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $SysAnalyticStatus = $.ObjectType<"sys_rep::SysAnalyticStatus", $SysAnalyticStatusλShape, null, [
  ..._sys_user.$Mgmt['__exclusives__'],
]>;
const $SysAnalyticStatus = $.makeType<$SysAnalyticStatus>(_.spec, "16f93cc7-1880-11ef-b0ba-adc92cf11f2b", _.syntax.literal);

const SysAnalyticStatus: $.$expr_PathNode<$.TypeSet<$SysAnalyticStatus, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysAnalyticStatus, $.Cardinality.Many), null);

export type $SysRepλShape = $.typeutil.flatten<_sys_core.$SysObjλShape & {
  "elements": $.LinkDesc<$SysRepEl, $.Cardinality.Many, {}, false, false,  false, false>;
  "parms": $.LinkDesc<$SysRepParm, $.Cardinality.Many, {}, false, false,  false, false>;
  "actionFieldGroup": $.LinkDesc<_sys_core.$SysDataObjActionFieldGroup, $.Cardinality.One, {}, false, false,  false, false>;
  "tables": $.LinkDesc<_sys_core.$SysDataObjTable, $.Cardinality.Many, {}, false, false,  false, false>;
  "analytics": $.LinkDesc<$SysAnalytic, $.Cardinality.Many, {}, false, false,  false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "exprFilter": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "exprObject": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "exprSort": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<report[is sys_rep::SysRepUser]": $.LinkDesc<$SysRepUser, $.Cardinality.Many, {}, false, false,  false, false>;
  "<report": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $SysRep = $.ObjectType<"sys_rep::SysRep", $SysRepλShape, null, [
  ..._sys_core.$SysObj['__exclusives__'],
]>;
const $SysRep = $.makeType<$SysRep>(_.spec, "170b40bb-1880-11ef-97a9-615fd4c43549", _.syntax.literal);

const SysRep: $.$expr_PathNode<$.TypeSet<$SysRep, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysRep, $.Cardinality.Many), null);

export type $SysRepElλShape = $.typeutil.flatten<_sys_user.$MgmtλShape & {
  "codeAlignment": $.LinkDesc<_sys_core.$SysCode, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "codeDataType": $.LinkDesc<_sys_core.$SysCode, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "column": $.LinkDesc<_sys_db.$SysColumn, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "header": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "indexTable": $.PropertyDesc<_default.$nonNegative, $.Cardinality.AtMostOne, false, false, false, false>;
  "codeSortDir": $.LinkDesc<_sys_core.$SysCode, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "orderSort": $.PropertyDesc<_default.$nonNegative, $.Cardinality.AtMostOne, false, false, false, false>;
  "codeDbDataSourceValue": $.LinkDesc<_sys_core.$SysCode, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "codeFieldElement": $.LinkDesc<_sys_core.$SysCode, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "codeReportElementType": $.LinkDesc<_sys_core.$SysCode, $.Cardinality.One, {}, false, false,  false, false>;
  "exprCustom": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "nameCustom": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDisplayable": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "orderDefine": $.PropertyDesc<_default.$nonNegative, $.Cardinality.One, false, false, false, false>;
  "orderDisplay": $.PropertyDesc<_default.$nonNegative, $.Cardinality.AtMostOne, false, false, false, false>;
  "<elements[is sys_rep::SysRep]": $.LinkDesc<$SysRep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<element[is sys_rep::SysRepUserEl]": $.LinkDesc<$SysRepUserEl, $.Cardinality.Many, {}, false, false,  false, false>;
  "<element": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<elements": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $SysRepEl = $.ObjectType<"sys_rep::SysRepEl", $SysRepElλShape, null, [
  ..._sys_user.$Mgmt['__exclusives__'],
]>;
const $SysRepEl = $.makeType<$SysRepEl>(_.spec, "17071154-1880-11ef-aa59-4b0afc0b67a2", _.syntax.literal);

const SysRepEl: $.$expr_PathNode<$.TypeSet<$SysRepEl, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysRepEl, $.Cardinality.Many), null);

export type $SysRepParmλShape = $.typeutil.flatten<_sys_user.$MgmtλShape & {
  "codeParmType": $.LinkDesc<_sys_core.$SysCode, $.Cardinality.One, {}, false, false,  false, false>;
  "fieldListItems": $.LinkDesc<_sys_core.$SysDataObjFieldListItems, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "linkTable": $.LinkDesc<_sys_db.$SysTable, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "fieldListItemsParmName": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "header": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "isMultiSelect": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "isRequired": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "orderDefine": $.PropertyDesc<_default.$nonNegative, $.Cardinality.One, false, false, false, false>;
  "<parms[is sys_rep::SysAnalytic]": $.LinkDesc<$SysAnalytic, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parms[is sys_rep::SysRep]": $.LinkDesc<$SysRep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parm[is sys_rep::SysRepUserParm]": $.LinkDesc<$SysRepUserParm, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parm": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parms": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $SysRepParm = $.ObjectType<"sys_rep::SysRepParm", $SysRepParmλShape, null, [
  ..._sys_user.$Mgmt['__exclusives__'],
]>;
const $SysRepParm = $.makeType<$SysRepParm>(_.spec, "16fcd7d3-1880-11ef-86b6-f5a454d499e4", _.syntax.literal);

const SysRepParm: $.$expr_PathNode<$.TypeSet<$SysRepParm, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysRepParm, $.Cardinality.Many), null);

export type $SysRepUserλShape = $.typeutil.flatten<_sys_user.$MgmtλShape & {
  "elements": $.LinkDesc<$SysRepUserEl, $.Cardinality.Many, {}, false, false,  false, false>;
  "parms": $.LinkDesc<$SysRepUserParm, $.Cardinality.Many, {}, false, false,  false, false>;
  "user": $.LinkDesc<_sys_user.$SysUser, $.Cardinality.One, {}, false, false,  false, false>;
  "descriptionUser": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "report": $.LinkDesc<$SysRep, $.Cardinality.One, {}, false, false,  false, false>;
  "analytics": $.LinkDesc<$SysRepUserAnalytic, $.Cardinality.Many, {}, false, false,  false, false>;
  "orderDefine": $.PropertyDesc<_default.$nonNegative, $.Cardinality.One, false, false, false, false>;
  "headerUser": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $SysRepUser = $.ObjectType<"sys_rep::SysRepUser", $SysRepUserλShape, null, [
  ..._sys_user.$Mgmt['__exclusives__'],
]>;
const $SysRepUser = $.makeType<$SysRepUser>(_.spec, "171bbe31-1880-11ef-8ec0-3144e305d5fd", _.syntax.literal);

const SysRepUser: $.$expr_PathNode<$.TypeSet<$SysRepUser, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysRepUser, $.Cardinality.Many), null);

export type $SysRepUserAnalyticλShape = $.typeutil.flatten<_sys_user.$MgmtλShape & {
  "analytic": $.LinkDesc<$SysAnalytic, $.Cardinality.One, {}, false, false,  false, false>;
  "parms": $.LinkDesc<$SysRepUserParm, $.Cardinality.Many, {}, false, false,  false, false>;
  "<analytics[is sys_rep::SysRepUser]": $.LinkDesc<$SysRepUser, $.Cardinality.Many, {}, false, false,  false, false>;
  "<analytics": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $SysRepUserAnalytic = $.ObjectType<"sys_rep::SysRepUserAnalytic", $SysRepUserAnalyticλShape, null, [
  ..._sys_user.$Mgmt['__exclusives__'],
]>;
const $SysRepUserAnalytic = $.makeType<$SysRepUserAnalytic>(_.spec, "171564ca-1880-11ef-913e-6324019f0e9f", _.syntax.literal);

const SysRepUserAnalytic: $.$expr_PathNode<$.TypeSet<$SysRepUserAnalytic, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysRepUserAnalytic, $.Cardinality.Many), null);

export type $SysRepUserElλShape = $.typeutil.flatten<_sys_user.$MgmtλShape & {
  "element": $.LinkDesc<$SysRepEl, $.Cardinality.One, {}, false, false,  false, false>;
  "orderDisplay": $.PropertyDesc<_default.$nonNegative, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDisplay": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "<elements[is sys_rep::SysRepUser]": $.LinkDesc<$SysRepUser, $.Cardinality.Many, {}, false, false,  false, false>;
  "<elements": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $SysRepUserEl = $.ObjectType<"sys_rep::SysRepUserEl", $SysRepUserElλShape, null, [
  ..._sys_user.$Mgmt['__exclusives__'],
]>;
const $SysRepUserEl = $.makeType<$SysRepUserEl>(_.spec, "1718af2a-1880-11ef-9fcc-95238c58cc60", _.syntax.literal);

const SysRepUserEl: $.$expr_PathNode<$.TypeSet<$SysRepUserEl, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysRepUserEl, $.Cardinality.Many), null);

export type $SysRepUserParmλShape = $.typeutil.flatten<_sys_user.$MgmtλShape & {
  "parm": $.LinkDesc<$SysRepParm, $.Cardinality.One, {}, false, false,  false, false>;
  "parmValue": $.PropertyDesc<_std.$json, $.Cardinality.AtMostOne, false, false, false, false>;
  "<parms[is sys_rep::SysRepUserAnalytic]": $.LinkDesc<$SysRepUserAnalytic, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parms[is sys_rep::SysRepUser]": $.LinkDesc<$SysRepUser, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parms": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $SysRepUserParm = $.ObjectType<"sys_rep::SysRepUserParm", $SysRepUserParmλShape, null, [
  ..._sys_user.$Mgmt['__exclusives__'],
]>;
const $SysRepUserParm = $.makeType<$SysRepUserParm>(_.spec, "17120fc8-1880-11ef-a921-318df441459f", _.syntax.literal);

const SysRepUserParm: $.$expr_PathNode<$.TypeSet<$SysRepUserParm, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SysRepUserParm, $.Cardinality.Many), null);

type getAnalyticλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $SysAnalytic, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getAnalytic<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  name: P1,
): getAnalyticλFuncExpr<P1>;
function getAnalytic(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_rep::getAnalytic', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "17011630-1880-11ef-af53-f7b94ac2e26f", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_rep::getAnalytic",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type getReportλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $SysRep, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getReport<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  name: P1,
): getReportλFuncExpr<P1>;
function getReport(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_rep::getReport', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "170b40bb-1880-11ef-97a9-615fd4c43549", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_rep::getReport",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};



export { $SysAnalytic, SysAnalytic, $SysAnalyticStatus, SysAnalyticStatus, $SysRep, SysRep, $SysRepEl, SysRepEl, $SysRepParm, SysRepParm, $SysRepUser, SysRepUser, $SysRepUserAnalytic, SysRepUserAnalytic, $SysRepUserEl, SysRepUserEl, $SysRepUserParm, SysRepUserParm };

type __defaultExports = {
  "SysAnalytic": typeof SysAnalytic;
  "SysAnalyticStatus": typeof SysAnalyticStatus;
  "SysRep": typeof SysRep;
  "SysRepEl": typeof SysRepEl;
  "SysRepParm": typeof SysRepParm;
  "SysRepUser": typeof SysRepUser;
  "SysRepUserAnalytic": typeof SysRepUserAnalytic;
  "SysRepUserEl": typeof SysRepUserEl;
  "SysRepUserParm": typeof SysRepUserParm;
  "getAnalytic": typeof getAnalytic;
  "getReport": typeof getReport
};
const __defaultExports: __defaultExports = {
  "SysAnalytic": SysAnalytic,
  "SysAnalyticStatus": SysAnalyticStatus,
  "SysRep": SysRep,
  "SysRepEl": SysRepEl,
  "SysRepParm": SysRepParm,
  "SysRepUser": SysRepUser,
  "SysRepUserAnalytic": SysRepUserAnalytic,
  "SysRepUserEl": SysRepUserEl,
  "SysRepUserParm": SysRepUserParm,
  "getAnalytic": getAnalytic,
  "getReport": getReport
};
export default __defaultExports;
